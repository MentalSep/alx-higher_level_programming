
# Importing matrix_mul function from 100-matrix_mul.py
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6], [7, 8]]
>>> print(matrix_mul(m_a, m_b))
[[19, 22], [43, 50]]

>>> m_a = [[1.0, 2.0], [3.0, 4.0]]
>>> m_b = [[5.0, 6.0], [7.0, 8.0]]
>>> print(matrix_mul(m_a, m_b))
[[19.0, 22.0], [43.0, 50.0]]

>>> m_a = [[1.0, 2.0, 3.0], [4.0, 5.0, -6.0], [7.0, 8.0, -9.0]]
>>> m_b = [[1.0, 2.0, 3.0, 4], [4.0, 5.0, -6.0, 7], [7.0, 8.0, -9.0, 10]]
>>> print(matrix_mul(m_a, m_b))
[[30.0, 36.0, -36.0, 48.0], [-18.0, -15.0, 36.0, -9.0], [-24.0, -18.0, 54.0, -6.0]]


>>> m_a = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> m_b = [[1, 2, 3], [4, 5, -6]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> m_a = [[1]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> m_a = [[]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> m_a = [[1, 2, 3], [4, 5, -6], [7, 8, -9, 10]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> m_a = ((1, 2, 3))
>>> m_b = [[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> m_a = None
>>> m_b = [[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> m_b = None
>>> m_a = [[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b must be a list


>>> m_a = 1
>>> m_b = [[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a must be a list

>>> m_b = 1
>>> m_a = [[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b must be a list

>>> m_a = [[1, 2, 3], [4, 5, -6], [7, "test", -9]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> m_b = [[1, 2, 3], [4, 5, -6], [7, "test", -9]]
>>> m_a = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> m_a = [[1, 2, 3], [4, None, -6], [7, 8, -9]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> m_b = [[1, 2, 3], [4, None, -6], [7, 8, -9]]
>>> m_a = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> m_a = [[{1}, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> m_b = [[{1}, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> m_a = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> m_a = [[[1], 2, 3], [4, 5, -6], [7, 8, -9]]
>>> m_b = [[1, 2, 3], [4, 5, -6], [7, 8, -9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul())
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> print(matrix_mul(m_a))
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
