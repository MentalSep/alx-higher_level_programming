
# Import the function from the file

>>> add_integer = __import__('0-add_integer').add_integer

>>> print(add_integer(5, 5))
10

>>> print(add_integer(100, -2))
98

>>> print(add_integer(1))


>>> print(add_integer(3.14, 8))
11

>>> print(add_integer(3.14))
101

>>> print(add_integer(3.14, -3.14))
0

>>> print(add_integer(0))
98

>>> print(add_integer(0, 0))
0

>>> print(add_integer(-100, 0))
-100

>>> print(add_integer(None))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer(None, None))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer(1, None))
Traceback (most recent call last):
TypeError: b must be an integer

>>> print(add_integer("test", 10))
Traceback (most recent call last):
TypeError: a must be an integer

>>> print(add_integer(30, []))
Traceback (most recent call last):
TypeError: b must be an integer

>>> print(add_integer(30, float('nan')))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> print(add_integer(float('inf'), 10))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
