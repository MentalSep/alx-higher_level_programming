# Importing BaseGeometry class from the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> print(bg.integer_validator.__doc__)
Method that validates value

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator(a, a, a)
Traceback (most recent call last):
NameError: name 'a' is not defined

>>> bg.integer_validator(5, 5, 5)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", 3.14)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", True)
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", 5)


>>> bg.integer_validator("", 5)


>>> bg.integer_validator("distance", [5, 5])
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", (5, 5))
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", {5, 5})
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.area(5)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given
